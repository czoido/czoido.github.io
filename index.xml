<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carlos Zoido</title>
    <link>https://czoido.github.io/</link>
    <description>Recent content on Carlos Zoido</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Nov 2020 13:08:06 +0100</lastBuildDate><atom:link href="https://czoido.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adding dependencies to your Node.js native addons using Conan</title>
      <link>https://czoido.github.io/posts/node-native-module-conan/</link>
      <pubDate>Sun, 08 Nov 2020 13:08:06 +0100</pubDate>
      
      <guid>https://czoido.github.io/posts/node-native-module-conan/</guid>
      <description>We have already covered how to write a simple C++ hello world native addon in a previous post. Now, we are going to add dependencies to that simple example, manage them with Conan and run the code in Node.js.
If you are not familiar with Conan, please check the getting started in the documentation.
As we explained in the previous post the native addons are usually built generating a project file for your build-system using node-gyp.</description>
    </item>
    
    <item>
      <title>Creating C&#43;&#43; Node Addons using N-API</title>
      <link>https://czoido.github.io/posts/creating-c&#43;&#43;-node-addons-using-napi/</link>
      <pubDate>Fri, 06 Nov 2020 12:31:18 +0100</pubDate>
      
      <guid>https://czoido.github.io/posts/creating-c&#43;&#43;-node-addons-using-napi/</guid>
      <description>With Node.js addons we can load our C++ libraries as if they were ordinary Node.js modules. The recommended way to implement these addons is using the N-API. The N-API is delivered as a part of the Node.js distribution. since v8 and became stable in v10.
One &amp;ldquo;Hello World&amp;rdquo; addon could look something like this:
// hello.cpp #include &amp;lt;node.h&amp;gt; namespace demo { using v8::FunctionCallbackInfo; using v8::Isolate; using v8::Local; using v8::Object; using v8::String; using v8::Value; void HelloWorld(const FunctionCallbackInfo&amp;lt;Value&amp;gt;&amp;amp; args) { Isolate* isolate = args.</description>
    </item>
    
    <item>
      <title>Some of my projects</title>
      <link>https://czoido.github.io/projects/</link>
      <pubDate>Fri, 06 Nov 2020 09:56:41 +0100</pubDate>
      
      <guid>https://czoido.github.io/projects/</guid>
      <description>These are some project I have done during these years.
Projection mapping software and Multi-projector correction software In 2018 I decided to make a completely new application to calibrate Multi-Projector systems based on what I had learned during my Ph.D. I also reused some of the algorithms from that software to make an automatic calibration system for Projection Mapping. Here are some videos of the results of that development. I planned to distribute some free demos of these applications once complete.</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://czoido.github.io/publications/</link>
      <pubDate>Fri, 06 Nov 2020 09:56:35 +0100</pubDate>
      
      <guid>https://czoido.github.io/publications/</guid>
      <description>Automatic correction method for panoramic multi-projector displays DYNA (September 2013) Abstract In this paper we present an easy and novel method to calibrate a panoramic multi-projector display system. These kinds of displays have a wide range of applications in fields such as simulation, entertainment, marketing and data visualization.
Our correction method uses a commercial off-the-shelf camera that rotates around its vertical axis in order to cover the entire screen. Light structured patterns are projected on this screen in order to establish the transformation that relates the camera to each projector.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://czoido.github.io/contact/</link>
      <pubDate>Fri, 06 Nov 2020 09:37:06 +0100</pubDate>
      
      <guid>https://czoido.github.io/contact/</guid>
      <description>You can DM me on Twitter or just write me an e-mail to carloszoido [at] gmail [dot] com</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://czoido.github.io/aboutme/</link>
      <pubDate>Fri, 06 Nov 2020 09:03:14 +0100</pubDate>
      
      <guid>https://czoido.github.io/aboutme/</guid>
      <description>The presentation Hi! I&amp;rsquo;m Carlos. A Software Engineer from Madrid. This blog is just an excuse to keep track of some things I do.
I have always felt a non-ending curiosity for many different subjects. That thirst of knowledge is what has mainly driven my personal, academic and professional career and was the cause that made me study Industrial Engineering to learn what made things work. After finishing my studies, I started working as a C++ Software Developer in a Research Centre at the Polytechnic University of Madrid.</description>
    </item>
    
  </channel>
</rss>
